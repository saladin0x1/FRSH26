# Makefile for FRSH26 encryption program

# Compiler and flags
CC = gcc
CFLAGS = -Wall -Wno-unused-function -Wno-unneeded-internal-declaration  # Add flags to suppress warnings
LDFLAGS = -L/usr/local/opt/flex/lib -lfl   # Link with the Flex library

# Source files and target executable
LEX_SRC = lex.yy.c  # The C source file generated by Flex
BISON_SRC = parser.tab.c  # The C source file generated by Bison
EXEC = frsh26_encryption  # The name of the executable to be generated

# Default target: Build the executable
all: $(EXEC)

# Rule to create the final executable
$(EXEC): $(LEX_SRC) $(BISON_SRC)
	# Compile lex.yy.c and parser.tab.c into the final executable
	$(CC) $(CFLAGS) $(LEX_SRC) $(BISON_SRC) -o $(EXEC) $(LDFLAGS)

# Rule to generate lex.yy.c from scanner.l using Flex
lex.yy.c: scanner.l
	# Run Flex to generate lex.yy.c from scanner.l
	@echo "Running Flex on scanner.l..."
	flex scanner.l

# Rule to generate parser.tab.c and parser.tab.h from parser.y using Bison
parser.tab.c parser.tab.h: parser.y
	# Run Bison to generate parser.tab.c and parser.tab.h from parser.y
	@echo "Running Bison on parser.y..."
	bison -d parser.y

# Clean rule: Remove generated files and the executable
clean:
	# Remove generated files and executable
	rm -f $(EXEC) $(LEX_SRC) $(BISON_SRC) parser.tab.h
	@echo "Cleaned up generated files."

